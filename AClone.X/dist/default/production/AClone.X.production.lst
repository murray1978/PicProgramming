

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 02:05:18 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F819
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F819 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  008F                     	;# 
    83  0090                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0094                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  010C                     	;# 
    90  010D                     	;# 
    91  010E                     	;# 
    92  010F                     	;# 
    93  018C                     	;# 
    94  018D                     	;# 
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000D                     	;# 
   194  000E                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0014                     	;# 
   202  0015                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  009E                     	;# 
   264  009F                     	;# 
   265  010C                     	;# 
   266  010D                     	;# 
   267  010E                     	;# 
   268  010F                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  001E                     _ADRESH	set	30
   272  001F                     _ADCON0	set	31
   273  0005                     _PORTA	set	5
   274  0017                     _CCP1CON	set	23
   275  0015                     _CCPR1L	set	21
   276  0006                     _PORTB	set	6
   277  0001                     _TMR0	set	1
   278  00FA                     _GO_DONE	set	250
   279  005A                     _TMR0IF	set	90
   280  005D                     _TMR0IE	set	93
   281  009E                     _ADRESL	set	158
   282  009F                     _ADCON1	set	159
   283  0085                     _TRISA	set	133
   284  0092                     _PR2	set	146
   285  0086                     _TRISB	set	134
   286  008F                     _OSCCON	set	143
   287  0081                     _OPTION_REG	set	129
   288                           
   289                           ; #config settings
   290  0000                     
   291                           	psect	cinit
   292  000B                     start_initialization:	
   293  000B                     __initialization:	
   294                           
   295                           ; Clear objects allocated to COMMON
   296  000B  01F8               	clrf	__pbssCOMMON& (0+127)
   297  000C  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   298  000D                     end_of_initialization:	
   299                           ;End of C runtime variable initialization code
   300                           
   301  000D                     __end_of__initialization:	
   302  000D  0183               	clrf	3
   303  000E  28CB               	ljmp	_main	;jump to C main() function
   304                           
   305                           	psect	bssCOMMON
   306  0078                     __pbssCOMMON:	
   307  0078                     _pwm_running:	
   308  0078                     	ds	2
   309                           
   310                           	psect	cstackCOMMON
   311  0070                     __pcstackCOMMON:	
   312  0070                     ?_setup:	
   313  0070                     ?_loop:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_intCmd:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ??_intCmd:	
   320                           ; 1 bytes @ 0x0
   321                           
   322                           
   323                           ; 1 bytes @ 0x0
   324  0070                     	ds	2
   325  0072                     ??_setup:	
   326  0072                     ?___awdiv:	
   327                           ; 1 bytes @ 0x2
   328                           
   329  0072                     ___awdiv@divisor:	
   330                           ; 2 bytes @ 0x2
   331                           
   332                           
   333                           ; 2 bytes @ 0x2
   334  0072                     	ds	2
   335  0074                     ___awdiv@dividend:	
   336                           
   337                           ; 2 bytes @ 0x4
   338  0074                     	ds	2
   339  0076                     ??___awdiv:	
   340                           
   341                           ; 1 bytes @ 0x6
   342  0076                     	ds	1
   343  0077                     ??_delay:	
   344                           
   345                           ; 1 bytes @ 0x7
   346  0077                     	ds	1
   347  0078                     ??_loop:	
   348  0078                     ??_main:	
   349                           ; 1 bytes @ 0x8
   350                           
   351                           
   352                           	psect	cstackBANK0
   353  0020                     __pcstackBANK0:	
   354                           ; 1 bytes @ 0x8
   355                           
   356  0020                     ___awdiv@counter:	
   357                           
   358                           ; 1 bytes @ 0x0
   359  0020                     	ds	1
   360  0021                     ___awdiv@sign:	
   361                           
   362                           ; 1 bytes @ 0x1
   363  0021                     	ds	1
   364  0022                     ___awdiv@quotient:	
   365                           
   366                           ; 2 bytes @ 0x2
   367  0022                     	ds	2
   368  0024                     ?_delay:	
   369  0024                     delay@millis:	
   370                           ; 1 bytes @ 0x4
   371                           
   372                           
   373                           ; 2 bytes @ 0x4
   374  0024                     	ds	2
   375  0026                     delay@_delay:	
   376                           
   377                           ; 2 bytes @ 0x6
   378  0026                     	ds	2
   379  0028                     delay@i:	
   380                           
   381                           ; 2 bytes @ 0x8
   382  0028                     	ds	2
   383  002A                     ?_main:	
   384  002A                     main@argc:	
   385                           ; 2 bytes @ 0xA
   386                           
   387                           
   388                           ; 2 bytes @ 0xA
   389  002A                     	ds	2
   390  002C                     main@argv:	
   391                           
   392                           ; 2 bytes @ 0xC
   393  002C                     	ds	2
   394                           
   395                           	psect	maintext
   396  00CB                     __pmaintext:	
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 22 in file "newmain.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;  argc            2   10[BANK0 ] int 
   405 ;;  argv            2   12[BANK0 ] PTR PTR unsigned char 
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  2   10[BANK0 ] int 
   410 ;; Registers used:
   411 ;;		wreg, status,2, status,0, pclath, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : B00/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   417 ;;      Params:         0       4       0       0
   418 ;;      Locals:         0       0       0       0
   419 ;;      Temps:          0       0       0       0
   420 ;;      Totals:         0       4       0       0
   421 ;;Total ram usage:        4 bytes
   422 ;; Hardware stack levels required when called:    4
   423 ;; This function calls:
   424 ;;		_loop
   425 ;;		_setup
   426 ;; This function is called by:
   427 ;;		Startup code after reset
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           
   432                           ;psect for function _main
   433  00CB                     _main:	
   434  00CB                     l947:	
   435                           ;incstack = 0
   436                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   437                           
   438                           
   439                           ;newmain.c: 23:     OSCCON = 01100000;
   440  00CB  1683               	bsf	3,5	;RP0=1, select bank1
   441  00CC  1303               	bcf	3,6	;RP1=0, select bank1
   442  00CD  018F               	clrf	15	;volatile
   443  00CE                     l949:	
   444                           
   445                           ;newmain.c: 28:     setup();
   446  00CE  20C3               	fcall	_setup
   447  00CF                     l951:	
   448                           
   449                           ;newmain.c: 31:     {;newmain.c: 32:         loop();
   450  00CF  20B1               	fcall	_loop
   451  00D0  28CF               	goto	l951
   452  00D1  280A               	ljmp	start
   453  00D2                     __end_of_main:	
   454                           
   455                           	psect	text1
   456  00C3                     __ptext1:	
   457 ;; *************** function _setup *****************
   458 ;; Defined at:
   459 ;;		line 38 in file "newmain.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, status,2
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   473 ;;      Params:         0       0       0       0
   474 ;;      Locals:         0       0       0       0
   475 ;;      Temps:          0       0       0       0
   476 ;;      Totals:         0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; Hardware stack levels required when called:    1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           
   488                           ;psect for function _setup
   489  00C3                     _setup:	
   490  00C3                     l753:	
   491                           ;incstack = 0
   492                           ; Regs used in _setup: [wreg+status,2]
   493                           
   494                           
   495                           ;newmain.c: 40:     TRISB = 0;
   496  00C3  1683               	bsf	3,5	;RP0=1, select bank1
   497  00C4  1303               	bcf	3,6	;RP1=0, select bank1
   498  00C5  0186               	clrf	6	;volatile
   499  00C6                     l755:	
   500                           
   501                           ;newmain.c: 41:     PORTB = 255;
   502  00C6  30FF               	movlw	255
   503  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   504  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   505  00C9  0086               	movwf	6	;volatile
   506  00CA                     l46:	
   507  00CA  0008               	return
   508  00CB                     __end_of_setup:	
   509                           
   510                           	psect	text2
   511  00B1                     __ptext2:	
   512 ;; *************** function _loop *****************
   513 ;; Defined at:
   514 ;;		line 47 in file "newmain.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0, pclath, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   528 ;;      Params:         0       0       0       0
   529 ;;      Locals:         0       0       0       0
   530 ;;      Temps:          0       0       0       0
   531 ;;      Totals:         0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; Hardware stack levels required when called:    3
   535 ;; This function calls:
   536 ;;		_delay
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           
   543                           ;psect for function _loop
   544  00B1                     _loop:	
   545  00B1                     l939:	
   546                           ;incstack = 0
   547                           ; Regs used in _loop: [wreg+status,2+status,0+pclath+cstack]
   548                           
   549                           
   550                           ;newmain.c: 62:     PORTB = 0;
   551  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   552  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   553  00B3  0186               	clrf	6	;volatile
   554  00B4                     l941:	
   555                           
   556                           ;newmain.c: 63:     delay(500);
   557  00B4  30F4               	movlw	244
   558  00B5  00A4               	movwf	delay@millis
   559  00B6  3001               	movlw	1
   560  00B7  00A5               	movwf	delay@millis+1
   561  00B8  2078               	fcall	_delay
   562  00B9                     l943:	
   563                           
   564                           ;newmain.c: 70:     PORTB = 255;
   565  00B9  30FF               	movlw	255
   566  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   567  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   568  00BC  0086               	movwf	6	;volatile
   569  00BD                     l945:	
   570                           
   571                           ;newmain.c: 71:     delay(500);
   572  00BD  30F4               	movlw	244
   573  00BE  00A4               	movwf	delay@millis
   574  00BF  3001               	movlw	1
   575  00C0  00A5               	movwf	delay@millis+1
   576  00C1  2078               	fcall	_delay
   577  00C2                     l49:	
   578  00C2  0008               	return
   579  00C3                     __end_of_loop:	
   580                           
   581                           	psect	text3
   582  0078                     __ptext3:	
   583 ;; *************** function _delay *****************
   584 ;; Defined at:
   585 ;;		line 22 in file "./main.h"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  millis          2    4[BANK0 ] int 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  i               2    8[BANK0 ] int 
   590 ;;  _delay          2    6[BANK0 ] int 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   600 ;;      Params:         0       2       0       0
   601 ;;      Locals:         0       4       0       0
   602 ;;      Temps:          1       0       0       0
   603 ;;      Totals:         1       6       0       0
   604 ;;Total ram usage:        7 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    2
   607 ;; This function calls:
   608 ;;		___awdiv
   609 ;; This function is called by:
   610 ;;		_loop
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           
   615                           ;psect for function _delay
   616  0078                     _delay:	
   617  0078                     l927:	
   618                           ;incstack = 0
   619                           ; Regs used in _delay: [wreg+status,2+status,0+pclath+cstack]
   620                           
   621                           
   622                           ;./main.h: 22:     void delay( int millis);./main.h: 23:     {;./main.h: 24:         int
      +                           _delay = millis / 4;
   623  0078  3004               	movlw	4
   624  0079  00F2               	movwf	___awdiv@divisor
   625  007A  3000               	movlw	0
   626  007B  00F3               	movwf	___awdiv@divisor+1
   627  007C  1283               	bcf	3,5	;RP0=0, select bank0
   628  007D  1303               	bcf	3,6	;RP1=0, select bank0
   629  007E  0825               	movf	delay@millis+1,w
   630  007F  00F5               	movwf	___awdiv@dividend+1
   631  0080  0824               	movf	delay@millis,w
   632  0081  00F4               	movwf	___awdiv@dividend
   633  0082  200F               	fcall	___awdiv
   634  0083  0873               	movf	?___awdiv+1,w
   635  0084  1283               	bcf	3,5	;RP0=0, select bank0
   636  0085  1303               	bcf	3,6	;RP1=0, select bank0
   637  0086  00A7               	movwf	delay@_delay+1
   638  0087  0872               	movf	?___awdiv,w
   639  0088  00A6               	movwf	delay@_delay
   640  0089                     l929:	
   641                           
   642                           ;./main.h: 30:         OPTION_REG = 0b00010100;
   643  0089  3014               	movlw	20
   644  008A  1683               	bsf	3,5	;RP0=1, select bank1
   645  008B  1303               	bcf	3,6	;RP1=0, select bank1
   646  008C  0081               	movwf	1	;volatile
   647  008D                     l931:	
   648                           
   649                           ;./main.h: 31:         TMR0 = 223;
   650  008D  30DF               	movlw	223
   651  008E  1283               	bcf	3,5	;RP0=0, select bank0
   652  008F  1303               	bcf	3,6	;RP1=0, select bank0
   653  0090  0081               	movwf	1	;volatile
   654  0091                     l933:	
   655                           
   656                           ;./main.h: 32:         TMR0IE = 0;
   657  0091  128B               	bcf	11,5	;volatile
   658  0092                     l935:	
   659                           
   660                           ;./main.h: 34:         for(int i = 0; i < _delay; i ++)
   661  0092  01A8               	clrf	delay@i
   662  0093  01A9               	clrf	delay@i+1
   663  0094  28A2               	goto	l21
   664  0095                     l23:	
   665  0095  1D0B               	btfss	11,2	;volatile
   666  0096  2898               	goto	u441
   667  0097  2899               	goto	u440
   668  0098                     u441:	
   669  0098  2895               	goto	l23
   670  0099                     u440:	
   671  0099                     l25:	
   672                           
   673                           ;./main.h: 37:             TMR0IE = 0;
   674  0099  128B               	bcf	11,5	;volatile
   675  009A                     l937:	
   676                           
   677                           ;./main.h: 39:         }
   678  009A  3001               	movlw	1
   679  009B  1283               	bcf	3,5	;RP0=0, select bank0
   680  009C  1303               	bcf	3,6	;RP1=0, select bank0
   681  009D  07A8               	addwf	delay@i,f
   682  009E  1803               	skipnc
   683  009F  0AA9               	incf	delay@i+1,f
   684  00A0  3000               	movlw	0
   685  00A1  07A9               	addwf	delay@i+1,f
   686  00A2                     l21:	
   687  00A2  0829               	movf	delay@i+1,w
   688  00A3  3A80               	xorlw	128
   689  00A4  00F7               	movwf	??_delay
   690  00A5  0827               	movf	delay@_delay+1,w
   691  00A6  3A80               	xorlw	128
   692  00A7  0277               	subwf	??_delay,w
   693  00A8  1D03               	skipz
   694  00A9  28AC               	goto	u455
   695  00AA  0826               	movf	delay@_delay,w
   696  00AB  0228               	subwf	delay@i,w
   697  00AC                     u455:	
   698  00AC  1C03               	skipc
   699  00AD  28AF               	goto	u451
   700  00AE  28B0               	goto	u450
   701  00AF                     u451:	
   702  00AF  2895               	goto	l23
   703  00B0                     u450:	
   704  00B0                     l27:	
   705  00B0  0008               	return
   706  00B1                     __end_of_delay:	
   707                           
   708                           	psect	text4
   709  000F                     __ptext4:	
   710 ;; *************** function ___awdiv *****************
   711 ;; Defined at:
   712 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  divisor         2    2[COMMON] int 
   715 ;;  dividend        2    4[COMMON] int 
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  quotient        2    2[BANK0 ] int 
   718 ;;  sign            1    1[BANK0 ] unsigned char 
   719 ;;  counter         1    0[BANK0 ] unsigned char 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  2    2[COMMON] int 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   729 ;;      Params:         4       0       0       0
   730 ;;      Locals:         0       4       0       0
   731 ;;      Temps:          1       0       0       0
   732 ;;      Totals:         5       4       0       0
   733 ;;Total ram usage:        9 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; Hardware stack levels required when called:    1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_delay
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function ___awdiv
   745  000F                     ___awdiv:	
   746  000F                     l883:	
   747                           ;incstack = 0
   748                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   749                           
   750  000F  1283               	bcf	3,5	;RP0=0, select bank0
   751  0010  1303               	bcf	3,6	;RP1=0, select bank0
   752  0011  01A1               	clrf	___awdiv@sign
   753  0012                     l885:	
   754  0012  1FF3               	btfss	___awdiv@divisor+1,7
   755  0013  2815               	goto	u341
   756  0014  2816               	goto	u340
   757  0015                     u341:	
   758  0015  281D               	goto	l891
   759  0016                     u340:	
   760  0016                     l887:	
   761  0016  09F2               	comf	___awdiv@divisor,f
   762  0017  09F3               	comf	___awdiv@divisor+1,f
   763  0018  0AF2               	incf	___awdiv@divisor,f
   764  0019  1903               	skipnz
   765  001A  0AF3               	incf	___awdiv@divisor+1,f
   766  001B                     l889:	
   767  001B  01A1               	clrf	___awdiv@sign
   768  001C  0AA1               	incf	___awdiv@sign,f
   769  001D                     l891:	
   770  001D  1FF5               	btfss	___awdiv@dividend+1,7
   771  001E  2820               	goto	u351
   772  001F  2821               	goto	u350
   773  0020                     u351:	
   774  0020  282A               	goto	l897
   775  0021                     u350:	
   776  0021                     l893:	
   777  0021  09F4               	comf	___awdiv@dividend,f
   778  0022  09F5               	comf	___awdiv@dividend+1,f
   779  0023  0AF4               	incf	___awdiv@dividend,f
   780  0024  1903               	skipnz
   781  0025  0AF5               	incf	___awdiv@dividend+1,f
   782  0026                     l895:	
   783  0026  3001               	movlw	1
   784  0027  00F6               	movwf	??___awdiv
   785  0028  0876               	movf	??___awdiv,w
   786  0029  06A1               	xorwf	___awdiv@sign,f
   787  002A                     l897:	
   788  002A  01A2               	clrf	___awdiv@quotient
   789  002B  01A3               	clrf	___awdiv@quotient+1
   790  002C                     l899:	
   791  002C  0872               	movf	___awdiv@divisor,w
   792  002D  0473               	iorwf	___awdiv@divisor+1,w
   793  002E  1903               	btfsc	3,2
   794  002F  2831               	goto	u361
   795  0030  2832               	goto	u360
   796  0031                     u361:	
   797  0031  2869               	goto	l919
   798  0032                     u360:	
   799  0032                     l901:	
   800  0032  01A0               	clrf	___awdiv@counter
   801  0033  0AA0               	incf	___awdiv@counter,f
   802  0034  2840               	goto	l907
   803  0035                     l903:	
   804  0035  3001               	movlw	1
   805  0036                     u375:	
   806  0036  1003               	clrc
   807  0037  0DF2               	rlf	___awdiv@divisor,f
   808  0038  0DF3               	rlf	___awdiv@divisor+1,f
   809  0039  3EFF               	addlw	-1
   810  003A  1D03               	skipz
   811  003B  2836               	goto	u375
   812  003C                     l905:	
   813  003C  3001               	movlw	1
   814  003D  00F6               	movwf	??___awdiv
   815  003E  0876               	movf	??___awdiv,w
   816  003F  07A0               	addwf	___awdiv@counter,f
   817  0040                     l907:	
   818  0040  1FF3               	btfss	___awdiv@divisor+1,7
   819  0041  2843               	goto	u381
   820  0042  2844               	goto	u380
   821  0043                     u381:	
   822  0043  2835               	goto	l903
   823  0044                     u380:	
   824  0044                     l909:	
   825  0044  3001               	movlw	1
   826  0045                     u395:	
   827  0045  1003               	clrc
   828  0046  0DA2               	rlf	___awdiv@quotient,f
   829  0047  0DA3               	rlf	___awdiv@quotient+1,f
   830  0048  3EFF               	addlw	-1
   831  0049  1D03               	skipz
   832  004A  2845               	goto	u395
   833  004B  0873               	movf	___awdiv@divisor+1,w
   834  004C  0275               	subwf	___awdiv@dividend+1,w
   835  004D  1D03               	skipz
   836  004E  2851               	goto	u405
   837  004F  0872               	movf	___awdiv@divisor,w
   838  0050  0274               	subwf	___awdiv@dividend,w
   839  0051                     u405:	
   840  0051  1C03               	skipc
   841  0052  2854               	goto	u401
   842  0053  2855               	goto	u400
   843  0054                     u401:	
   844  0054  285C               	goto	l915
   845  0055                     u400:	
   846  0055                     l911:	
   847  0055  0872               	movf	___awdiv@divisor,w
   848  0056  02F4               	subwf	___awdiv@dividend,f
   849  0057  0873               	movf	___awdiv@divisor+1,w
   850  0058  1C03               	skipc
   851  0059  03F5               	decf	___awdiv@dividend+1,f
   852  005A  02F5               	subwf	___awdiv@dividend+1,f
   853  005B                     l913:	
   854  005B  1422               	bsf	___awdiv@quotient,0
   855  005C                     l915:	
   856  005C  3001               	movlw	1
   857  005D                     u415:	
   858  005D  1003               	clrc
   859  005E  0CF3               	rrf	___awdiv@divisor+1,f
   860  005F  0CF2               	rrf	___awdiv@divisor,f
   861  0060  3EFF               	addlw	-1
   862  0061  1D03               	skipz
   863  0062  285D               	goto	u415
   864  0063                     l917:	
   865  0063  3001               	movlw	1
   866  0064  02A0               	subwf	___awdiv@counter,f
   867  0065  1D03               	btfss	3,2
   868  0066  2868               	goto	u421
   869  0067  2869               	goto	u420
   870  0068                     u421:	
   871  0068  2844               	goto	l909
   872  0069                     u420:	
   873  0069                     l919:	
   874  0069  0821               	movf	___awdiv@sign,w
   875  006A  1903               	btfsc	3,2
   876  006B  286D               	goto	u431
   877  006C  286E               	goto	u430
   878  006D                     u431:	
   879  006D  2873               	goto	l923
   880  006E                     u430:	
   881  006E                     l921:	
   882  006E  09A2               	comf	___awdiv@quotient,f
   883  006F  09A3               	comf	___awdiv@quotient+1,f
   884  0070  0AA2               	incf	___awdiv@quotient,f
   885  0071  1903               	skipnz
   886  0072  0AA3               	incf	___awdiv@quotient+1,f
   887  0073                     l923:	
   888  0073  0823               	movf	___awdiv@quotient+1,w
   889  0074  00F3               	movwf	?___awdiv+1
   890  0075  0822               	movf	___awdiv@quotient,w
   891  0076  00F2               	movwf	?___awdiv
   892  0077                     l344:	
   893  0077  0008               	return
   894  0078                     __end_of___awdiv:	
   895                           
   896                           	psect	text5
   897  00D2                     __ptext5:	
   898 ;; *************** function _intCmd *****************
   899 ;; Defined at:
   900 ;;		line 47 in file "./main.h"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		None
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   914 ;;      Params:         0       0       0       0
   915 ;;      Locals:         0       0       0       0
   916 ;;      Temps:          2       0       0       0
   917 ;;      Totals:         2       0       0       0
   918 ;;Total ram usage:        2 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		Interrupt level 1
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           
   928                           ;psect for function _intCmd
   929  00D2                     _intCmd:	
   930  00D2                     i1l35:	
   931  00D2  0871               	movf	??_intCmd+1,w
   932  00D3  008A               	movwf	10
   933  00D4  0E70               	swapf	??_intCmd^(0+4294967168),w
   934  00D5  0083               	movwf	3
   935  00D6  0EFE               	swapf	btemp,f
   936  00D7  0E7E               	swapf	btemp,w
   937  00D8  0009               	retfie
   938  00D9                     __end_of_intCmd:	
   939  007E                     btemp	set	126	;btemp
   940  007E                     wtemp0	set	126
   941                           
   942                           	psect	intentry
   943  0004                     __pintentry:	
   944                           ;incstack = 0
   945                           ; Regs used in _intCmd: []
   946                           
   947  0004                     interrupt_function:	
   948  007E                     saved_w	set	btemp
   949  0004  00FE               	movwf	btemp
   950  0005  0E03               	swapf	3,w
   951  0006  00F0               	movwf	??_intCmd
   952  0007  080A               	movf	10,w
   953  0008  00F1               	movwf	??_intCmd+1
   954  0009  28D2               	ljmp	_intCmd


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     14      14
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _loop->_delay
    _delay->___awdiv

Critical Paths under _intCmd in COMMON

    None.

Critical Paths under _main in BANK0

    _loop->_delay
    _delay->___awdiv

Critical Paths under _intCmd in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _intCmd in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _intCmd in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4     907
                                             10 BANK0      4     0      4
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0     907
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                7     5      2     907
                                              7 COMMON     1     1      0
                                              4 BANK0      6     4      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _intCmd                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _delay
       ___awdiv
   _setup

 _intCmd (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      E       E       3       17.5%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      18       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      18      10        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 02:05:18 2020

            __CFG_CP$OFF 0000                       l21 00A2                       l23 0095  
                     l25 0099                       l27 00B0                       l46 00CA  
                     l49 00C2             ___awdiv@sign 0021              __CFG_LVP$ON 0000  
            _pwm_running 0078                      l344 0077                      l901 0032  
                    l911 0055                      l903 0035                      l921 006E  
                    l913 005B                      l905 003C                      l753 00C3  
                    l923 0073                      l915 005C                      l907 0040  
                    l931 008D                      l755 00C6                      l917 0063  
                    l909 0044                      l933 0091                      l941 00B4  
                    l919 0069                      l935 0092                      l927 0078  
                    l943 00B9                      l951 00CF                      l937 009A  
                    l929 0089                      l945 00BD                      l891 001D  
                    l883 000F                      l939 00B1                      l947 00CB  
                    l893 0021                      l885 0012                      l949 00CE  
                    l895 0026                      l887 0016                      l897 002A  
                    l889 001B                      l899 002C                      u400 0055  
                    u401 0054                      u420 0069                      u340 0016  
                    u421 0068                      u405 0051                      u341 0015  
                    u430 006E                      u350 0021                      _PR2 0092  
                    u431 006D                      u415 005D                      u351 0020  
                    u360 0032                      u440 0099                      u361 0031  
                    u441 0098                      u450 00B0             __CFG_CPD$OFF 0000  
                    u451 00AF                      u380 0044                      u381 0043  
                    u375 0036                      u455 00AC                      u395 0045  
                   i1l35 00D2                     _TMR0 0001             __CFG_WRT$OFF 0000  
                   _main 00CB                     _loop 00B1                     btemp 007E  
                   start 000A            __CFG_MCLRE$ON 0000                    ?_main 002A  
        __end_of___awdiv 0078                    ?_loop 0070            __CFG_WDTE$OFF 0000  
        ___awdiv@divisor 0072          ___awdiv@counter 0020                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
         __CFG_CCPMX$RB2 0000                    _delay 0078                    _setup 00C3  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000B             __end_of_main 00D2  
           __end_of_loop 00C3                   ??_main 0078                   ??_loop 0078  
                 ?_delay 0024                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR1L 0015  
       ___awdiv@dividend 0074                   ?_setup 0070                   _OSCCON 008F  
                 _TMR0IE 005D                   _TMR0IF 005A           __CFG_PWRTE$OFF 0000  
              ??___awdiv 0076                   _intCmd 00D2                   delay@i 0028  
       ___awdiv@quotient 0022                   saved_w 007E  __end_of__initialization 000D  
         __pcstackCOMMON 0070            __end_of_delay 00B1            __end_of_setup 00CB  
                ??_delay 0077                  ??_setup 0072               __pmaintext 00CB  
             __pintentry 0004                  _CCP1CON 0017                  ?_intCmd 0070  
                _GO_DONE 00FA                  ___awdiv 000F          __size_of_intCmd 0007  
                __ptext1 00C3                  __ptext2 00B1                  __ptext3 0078  
                __ptext4 000F                  __ptext5 00D2     end_of_initialization 000D  
         __end_of_intCmd 00D9      start_initialization 000B                 ??_intCmd 0070  
            __pbssCOMMON 0078                ___latbits 0000            __pcstackBANK0 0020  
               ?___awdiv 0072           __size_of_delay 0039           __size_of_setup 0008  
      interrupt_function 0004         __size_of___awdiv 0069              delay@_delay 0026  
          __size_of_main 0007            __size_of_loop 0012              delay@millis 0024  
               main@argc 002A                 main@argv 002C                 intlevel1 0000  
             _OPTION_REG 0081       __CFG_FOSC$INTOSCIO 0000  
