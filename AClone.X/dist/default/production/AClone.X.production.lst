

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 15 13:27:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F819
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F819 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0086                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  008E                     	;# 
    79  008F                     	;# 
    80  0090                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0094                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  001E                     _ADRESH	set	30
   137  001F                     _ADCON0	set	31
   138  0005                     _PORTA	set	5
   139  00FA                     _GO_DONE	set	250
   140  009E                     _ADRESL	set	158
   141  009F                     _ADCON1	set	159
   142  0085                     _TRISA	set	133
   143                           
   144                           ; #config settings
   145  0000                     
   146                           	psect	cinit
   147  07FC                     start_initialization:	
   148  07FC                     __initialization:	
   149                           
   150                           ; Clear objects allocated to COMMON
   151  07FC  01F8               	clrf	__pbssCOMMON& (0+127)
   152  07FD  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   153  07FE                     end_of_initialization:	
   154                           ;End of C runtime variable initialization code
   155                           
   156  07FE                     __end_of__initialization:	
   157  07FE  0183               	clrf	3
   158  07FF  2FD5               	ljmp	_main	;jump to C main() function
   159                           
   160                           	psect	bssCOMMON
   161  0078                     __pbssCOMMON:	
   162  0078                     _pwm_running:	
   163  0078                     	ds	2
   164                           
   165                           	psect	cstackCOMMON
   166  0070                     __pcstackCOMMON:	
   167  0070                     ?_adc_init:	
   168  0070                     ??_adc_init:	
   169                           ; 1 bytes @ 0x0
   170                           
   171  0070                     ?_serial_init:	
   172                           ; 1 bytes @ 0x0
   173                           
   174  0070                     ?_setup:	
   175                           ; 1 bytes @ 0x0
   176                           
   177  0070                     ??_setup:	
   178                           ; 1 bytes @ 0x0
   179                           
   180  0070                     ?_loop:	
   181                           ; 1 bytes @ 0x0
   182                           
   183  0070                     ??_loop:	
   184                           ; 1 bytes @ 0x0
   185                           
   186  0070                     serial_init@baud:	
   187                           ; 1 bytes @ 0x0
   188                           
   189                           
   190                           ; 2 bytes @ 0x0
   191  0070                     	ds	2
   192  0072                     ??_serial_init:	
   193                           
   194                           ; 1 bytes @ 0x2
   195  0072                     	ds	2
   196  0074                     ?_main:	
   197  0074                     main@argc:	
   198                           ; 2 bytes @ 0x4
   199                           
   200                           
   201                           ; 2 bytes @ 0x4
   202  0074                     	ds	2
   203  0076                     main@argv:	
   204                           
   205                           ; 2 bytes @ 0x6
   206  0076                     	ds	2
   207  0078                     ??_main:	
   208                           
   209                           	psect	maintext
   210  07D5                     __pmaintext:	
   211                           ; 1 bytes @ 0x8
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 23 in file "newmain.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;  argc            2    4[COMMON] int 
   220 ;;  argv            2    6[COMMON] PTR PTR unsigned char 
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  2    4[COMMON] int 
   225 ;; Registers used:
   226 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   232 ;;      Params:         4       0       0       0
   233 ;;      Locals:         0       0       0       0
   234 ;;      Temps:          0       0       0       0
   235 ;;      Totals:         4       0       0       0
   236 ;;Total ram usage:        4 bytes
   237 ;; Hardware stack levels required when called:    1
   238 ;; This function calls:
   239 ;;		_adc_init
   240 ;;		_loop
   241 ;;		_serial_init
   242 ;;		_setup
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248                           
   249                           ;psect for function _main
   250  07D5                     _main:	
   251  07D5                     l702:	
   252                           ;incstack = 0
   253                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   254                           
   255                           
   256                           ;newmain.c: 24:     adc_init();
   257  07D5  27DE               	fcall	_adc_init
   258  07D6                     l704:	
   259                           
   260                           ;newmain.c: 25:     serial_init(0);
   261  07D6  3000               	movlw	0
   262  07D7  00F0               	movwf	serial_init@baud
   263  07D8  00F1               	movwf	serial_init@baud+1
   264  07D9  27ED               	fcall	_serial_init
   265  07DA                     l706:	
   266                           
   267                           ;newmain.c: 27:     setup();
   268  07DA  27D4               	fcall	_setup
   269  07DB                     l708:	
   270                           
   271                           ;newmain.c: 30:     {;newmain.c: 31:         loop();
   272  07DB  27D3               	fcall	_loop
   273  07DC  2FDB               	goto	l708
   274  07DD  2800               	ljmp	start
   275  07DE                     __end_of_main:	
   276                           
   277                           	psect	text1
   278  07D4                     __ptext1:	
   279 ;; *************** function _setup *****************
   280 ;; Defined at:
   281 ;;		line 37 in file "newmain.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		None
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   295 ;;      Params:         0       0       0       0
   296 ;;      Locals:         0       0       0       0
   297 ;;      Temps:          0       0       0       0
   298 ;;      Totals:         0       0       0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels used:    1
   301 ;; This function calls:
   302 ;;		Nothing
   303 ;; This function is called by:
   304 ;;		_main
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           
   309                           ;psect for function _setup
   310  07D4                     _setup:	
   311  07D4                     l33:	
   312                           ;incstack = 0
   313                           ; Regs used in _setup: []
   314                           
   315  07D4  0008               	return
   316  07D5                     __end_of_setup:	
   317                           
   318                           	psect	text2
   319  07ED                     __ptext2:	
   320 ;; *************** function _serial_init *****************
   321 ;; Defined at:
   322 ;;		line 9 in file "serial.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;  baud            2    0[COMMON] int 
   325 ;; Auto vars:     Size  Location     Type
   326 ;;  error           2    0        int 
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, status,2, status,0, btemp+1
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   336 ;;      Params:         2       0       0       0
   337 ;;      Locals:         2       0       0       0
   338 ;;      Temps:          0       0       0       0
   339 ;;      Totals:         4       0       0       0
   340 ;;Total ram usage:        4 bytes
   341 ;; Hardware stack levels used:    1
   342 ;; This function calls:
   343 ;;		Nothing
   344 ;; This function is called by:
   345 ;;		_main
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           
   350                           ;psect for function _serial_init
   351  07ED                     _serial_init:	
   352  07ED                     l690:	
   353                           ;incstack = 0
   354                           ; Regs used in _serial_init: [wreg+status,2+status,0+btemp+1]
   355                           
   356  07ED                     l692:	
   357                           
   358                           ;serial.c: 13:     if(baud == 0)
   359  07ED  0870               	movf	serial_init@baud,w
   360  07EE  0471               	iorwf	serial_init@baud+1,w
   361  07EF  1D03               	btfss	3,2
   362  07F0  2FF2               	goto	u51
   363  07F1  2FF3               	goto	u50
   364  07F2                     u51:	
   365  07F2  2FF4               	goto	l696
   366  07F3                     u50:	
   367  07F3                     l694:	
   368                           
   369                           ;serial.c: 16:     }
   370  07F3  2FFB               	goto	l64
   371  07F4                     l696:	
   372  07F4  0370               	decf	serial_init@baud,w
   373  07F5  0471               	iorwf	serial_init@baud+1,w
   374  07F6  1D03               	btfss	3,2
   375  07F7  2FF9               	goto	u61
   376  07F8  2FFA               	goto	u60
   377  07F9                     u61:	
   378  07F9  2FFB               	goto	l700
   379  07FA                     u60:	
   380  07FA  2FF3               	goto	l694
   381  07FB                     l700:	
   382  07FB                     l64:	
   383  07FB  0008               	return
   384  07FC                     __end_of_serial_init:	
   385                           
   386                           	psect	text3
   387  07D3                     __ptext3:	
   388 ;; *************** function _loop *****************
   389 ;; Defined at:
   390 ;;		line 41 in file "newmain.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		None
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   404 ;;      Params:         0       0       0       0
   405 ;;      Locals:         0       0       0       0
   406 ;;      Temps:          0       0       0       0
   407 ;;      Totals:         0       0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           
   418                           ;psect for function _loop
   419  07D3                     _loop:	
   420  07D3                     l36:	
   421                           ;incstack = 0
   422                           ; Regs used in _loop: []
   423                           
   424  07D3  0008               	return
   425  07D4                     __end_of_loop:	
   426                           
   427                           	psect	text4
   428  07DE                     __ptext4:	
   429 ;; *************** function _adc_init *****************
   430 ;; Defined at:
   431 ;;		line 52 in file "newmain.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, status,2
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   445 ;;      Params:         0       0       0       0
   446 ;;      Locals:         0       0       0       0
   447 ;;      Temps:          0       0       0       0
   448 ;;      Totals:         0       0       0       0
   449 ;;Total ram usage:        0 bytes
   450 ;; Hardware stack levels used:    1
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           
   459                           ;psect for function _adc_init
   460  07DE                     _adc_init:	
   461  07DE                     l656:	
   462                           ;incstack = 0
   463                           ; Regs used in _adc_init: [wreg+status,2]
   464                           
   465                           
   466                           ;newmain.c: 54:     PORTA = 0;
   467  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   468  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   469  07E0  0185               	clrf	5	;volatile
   470  07E1                     l658:	
   471                           
   472                           ;newmain.c: 55:     TRISA = 0b11111111;
   473  07E1  30FF               	movlw	255
   474  07E2  1683               	bsf	3,5	;RP0=1, select bank1
   475  07E3  1303               	bcf	3,6	;RP1=0, select bank1
   476  07E4  0085               	movwf	5	;volatile
   477  07E5                     l660:	
   478                           
   479                           ;newmain.c: 56:     ADCON0 = 0b00000000;
   480  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   481  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   482  07E7  019F               	clrf	31	;volatile
   483                           
   484                           ;newmain.c: 57:     ADCON1 = 0b10000000;
   485  07E8  3080               	movlw	128
   486  07E9  1683               	bsf	3,5	;RP0=1, select bank1
   487  07EA  1303               	bcf	3,6	;RP1=0, select bank1
   488  07EB  009F               	movwf	31	;volatile
   489  07EC                     l39:	
   490  07EC  0008               	return
   491  07ED                     __end_of_adc_init:	
   492  007E                     btemp	set	126	;btemp
   493  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_serial_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4     145
                                              4 COMMON     4     0      4
                           _adc_init
                               _loop
                        _serial_init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          4     2      2     145
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _loop
   _serial_init
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       A       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       A      10        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 15 13:27:51 2020

        serial_init@baud 0070              __CFG_CP$OFF 0000                       l33 07D4  
                     l36 07D3                       l39 07EC                       l64 07FB  
                     u50 07F3                       u51 07F2                       u60 07FA  
                     u61 07F9              __CFG_LVP$ON 0000              _pwm_running 0078  
                    l700 07FB                      l702 07D5                      l704 07D6  
                    l706 07DA                      l660 07E5                      l708 07DB  
                    l656 07DE                      l658 07E1                      l690 07ED  
                    l692 07ED                      l694 07F3                      l696 07F4  
           __CFG_CPD$OFF 0000             __CFG_WRT$OFF 0000                     _main 07D5  
                   _loop 07D3                     btemp 007E                     start 0000  
          __CFG_MCLRE$ON 0000                    ?_main 0074                    ?_loop 0070  
          __CFG_WDTE$OFF 0000                    _PORTA 0005                    _TRISA 0085  
         __CFG_CCPMX$RB2 0000                    _setup 07D4           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07DE             __end_of_loop 07D4                   ??_main 0078  
                 ??_loop 0070                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   ?_setup 0070  
       __end_of_adc_init 07ED           __CFG_PWRTE$OFF 0000             ?_serial_init 0070  
__end_of__initialization 07FE           __pcstackCOMMON 0070            __end_of_setup 07D5  
                ??_setup 0070               __pmaintext 07D5                ?_adc_init 0070  
                _GO_DONE 00FA     __size_of_serial_init 000F               ??_adc_init 0070  
                __ptext1 07D4                  __ptext2 07ED                  __ptext3 07D3  
                __ptext4 07DE     end_of_initialization 07FE      start_initialization 07FC  
      __size_of_adc_init 000F              __pbssCOMMON 0078                ___latbits 0000  
         __size_of_setup 0001            ??_serial_init 0072      __end_of_serial_init 07FC  
               _adc_init 07DE            __size_of_main 0009            __size_of_loop 0001  
               main@argc 0074                 main@argv 0076              _serial_init 07ED  
     __CFG_FOSC$INTOSCIO 0000  
